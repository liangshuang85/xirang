[versions]
aliyun-java-sdk-core = "4.6.3"
aliyun-sms = "2.0.22"
awssdk = "2.20.92"
caffeine = "3.1.8"
commons-collections4 = "4.4"
commons-io = "2.15.1"
commons-lang3 = "3.14.0"
flyway = "9.22.3"
lombok-plugin = "8.6"
gradle-git-properties-plugin = "2.4.1"
guava = "33.1.0-jre"
jackson = "2.15.4"
jsr305 = "3.0.2"
lark-oapi-sdk = "2.2.2"
lettuce = "6.3.2.RELEASE"
lombok = "1.18.30"
mapstruct = "1.5.5.Final"
mybatis-plus = "3.5.5"
mysql-connector = "8.3.0"
p6spy-spring-boot-starter = "1.9.1"
spring-boot = "3.2.4"
spring-dependency-management-plugin = "1.1.4"
spring-security = "6.2.3"
spring-session = "3.2.2"
springdoc = "2.3.0"
sugar = "0.1.5.2"
therapi-runtime-javadoc = "0.15.0"

[libraries]
aliyun-java-sdk-core = { module = "com.aliyun:aliyun-java-sdk-core", version.ref = "aliyun-java-sdk-core" }
aliyun-sms = { module = "com.aliyun:alibabacloud-dysmsapi20170525", version.ref = "aliyun-sms" }
aws-apache-client = { module = "software.amazon.awssdk:apache-client", version.ref = "awssdk" }
aws-s3 = { module = "software.amazon.awssdk:s3", version.ref = "awssdk" }
caffeine = { module = "com.github.ben-manes.caffeine:caffeine", version.ref = "caffeine" }
commons-collections4 = { module = "org.apache.commons:commons-collections4", version.ref = "commons-collections4" }
commons-io = { module = "commons-io:commons-io", version.ref = "commons-io" }
commons-lang3 = { module = "org.apache.commons:commons-lang3", version.ref = "commons-lang3" }
flyway-mysql = { module = "org.flywaydb:flyway-mysql", version.ref = "flyway" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jsr305 = { module = "com.google.code.findbugs:jsr305", version.ref = "jsr305" }
lark-oapi-sdk = { module = "com.larksuite.oapi:oapi-sdk", version.ref = "lark-oapi-sdk" }
lettuce-core = { module = "io.lettuce:lettuce-core", version.ref = "lettuce" }
lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }
mapstruct = { module = "org.mapstruct:mapstruct", version.ref = "mapstruct" }
mapstruct-processor = { module = "org.mapstruct:mapstruct-processor", version.ref = "mapstruct" }
mybatis-plus-core = { module = "com.baomidou:mybatis-plus-core", version.ref = "mybatis-plus" }
mybatis-plus-extension = { module = "com.baomidou:mybatis-plus-extension", version.ref = "mybatis-plus" }
mybatis-plus-spring-boot3-starter = { module = "com.baomidou:mybatis-plus-spring-boot3-starter", version.ref = "mybatis-plus" }
mysql-connector-j = { module = "com.mysql:mysql-connector-j", version.ref = "mysql-connector" }
p6spy-spring-boot-starter = { module = "com.github.gavlyukovskiy:p6spy-spring-boot-starter", version.ref = "p6spy-spring-boot-starter" }
spring-boot-configuration-processor = { module = "org.springframework.boot:spring-boot-configuration-processor", version.ref = "spring-boot" }
spring-boot-starter = { module = "org.springframework.boot:spring-boot-starter", version.ref = "spring-boot" }
spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "spring-boot" }
spring-boot-starter-aop = { module = "org.springframework.boot:spring-boot-starter-aop", version.ref = "spring-boot" }
spring-boot-starter-cache = { module = "org.springframework.boot:spring-boot-starter-cache", version.ref = "spring-boot" }
spring-boot-starter-data-redis = { module = "org.springframework.boot:spring-boot-starter-data-redis", version.ref = "spring-boot" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "spring-boot" }
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring-boot" }
spring-security-core = { module = "org.springframework.security:spring-security-core", version.ref = "spring-security" }
spring-security-crypto = { module = "org.springframework.security:spring-security-crypto", version.ref = "spring-security" }
spring-session-data-redis = { module = "org.springframework.session:spring-session-data-redis", version.ref = "spring-session" }
springdoc-openapi-starter-common = { module = "org.springdoc:springdoc-openapi-starter-common", version.ref = "springdoc" }
springdoc-openapi-starter-webmvc-ui = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "springdoc" }
sugar-commons = { module = "org.sugarframework:sugar-commons", version.ref = "sugar" }
sugar-crud = { module = "org.sugarframework:sugar-crud", version.ref = "sugar" }
sugar-preconfigure = { module = "org.sugarframework:sugar-preconfigure", version.ref = "sugar" }
therapi-runtime-javadoc = { module = "com.github.therapi:therapi-runtime-javadoc", version.ref = "therapi-runtime-javadoc" }
therapi-runtime-javadoc-scribe = { module = "com.github.therapi:therapi-runtime-javadoc-scribe", version.ref = "therapi-runtime-javadoc" }

[plugins]
gradle-git-properties-plugin = { id = "com.gorylenko.gradle-git-properties", version.ref = "gradle-git-properties-plugin" }
lombok-plugin = { id = "io.freefair.lombok", version.ref = "lombok-plugin" }
springframework-boot-plugin = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-dependency-management-plugin = { id = "io.spring.dependency-management", version.ref = "spring-dependency-management-plugin" }
